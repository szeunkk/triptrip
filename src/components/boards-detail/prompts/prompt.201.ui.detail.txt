아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: d5h944wx)
조건-피그마) 구현될 컴포넌트 노드ID(detail-title 영역): 11134:11844
조건-피그마) 구현될 컴포넌트 노드ID(detail-writer 영역): 285:32464
조건-피그마) 구현될 컴포넌트 노드ID(detail-content 영역): 11134:11845
조건-피그마) 구현될 컴포넌트 노드ID(detail-youtube 영역): 285:32477
조건-피그마) 구현될 컴포넌트 노드ID(detail-like 영역): 285:32481
조건-피그마) 구현될 컴포넌트 노드ID(detail-button 영역): 285:32488

조건-파일경로) 구현될 TSX 파일경로: src/components/boards-detail/index.tsx
조건-파일경로) 구현될 CSS 파일경로: src/components/boards-detail/styles.module.css

==============================================

조건-공통목록) 사용할 공통컴포넌트 목록
            - <Button />

조건-공통목록) 사용할 색상 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

조건-공통목록) 사용할 타이포그래피 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

조건-공통목록) 구현에 사용되는 svg파일은 직접 읽거나 확인하지 않을 것.
            - 프롬프트에서 제시한 크기 구현만 진행할 것.

==============================================

핵심요구사항) MCP를 연동하여 피그마의 디자인을 이미 만들어져있는 와이어프레임의 영역에 그대로 구현할 것.

핵심요구사항) 게시글 상세는 아래의 조건으로 Mock 데이터를 만들어 적용할 것.
            1. 아래의 지시를 반영하여 구현할 것.
                1) detailTitle
                    - 제목텍스트: 피그마와 동일하게 구현할 것.

                2) detailWriter
                    - profile
                        - 프로필 이미지
                            - 사용할 이미지 파일
                            - 너비, 높이
                        - 프로필 이름 텍스트: 피그마와 동일하게 구현할 것.
                    - 작성일 텍스트: 피그마와 동일하게 구현할 것.
                    - 아이콘
                        - 사용할 아이콘 파일
                            - link.svg
                            - location.svg
                            - 너비 * 높이(단위: px): 24 * 24 

                3) detailImage
                    - 사용할 이미지 파일: 
                        -  boardsdetail_image.png
                        - 너비 * 높이(단위: px): 400 * 531

                4) detailContent
                    - 내용 텍스트: 피그마와 동일하게 구현할 것.
                
                5) detailYoutube
                    - 사용할 이미지 파일:
                        - boardsdetail_image_2.png
                        - 너비 * 높이(단위: px): 822 * 464
                    - 사용할 아이콘 파일:
                        - youtube.svg
                        - 너비 * 높이(단위: px): 44 * 44                    
                
                6) detailLike
                    - 사용할 아이콘 파일:
                        - good.svg
                        - bad.svg
                        - 너비 * 높이(단위: px): 24 * 24 
                    - 숫자 텍스트: 피그마와 동일하게 구현할 것.
                

핵심요구사항) 공통컴포넌트는 다음의 규칙을 지켜 step-by-step 으로 구현하고, 적용 결과를 체크리스트로 반환할 것.
            1. 공통컴포넌트 원본을 수정하지 말고, 아래의 props만 활용할 것.
                - variant: primary, secondary, tertiary를 확인하여 구현할 것.
                - theme: light 모드만 사용할 것.
                - size: 피그마와 일치할 것.
                - className 전달: width만 허용할 것.

            2. 적용될 공통컴포넌트 목록을 구현할 것.
                1) detailButton
                    - 목록으로: <Button />
                    - 수정하기: <Button />
