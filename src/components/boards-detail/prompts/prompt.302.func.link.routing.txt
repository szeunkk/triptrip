아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.  
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.  
            - @01-common.mdc
            - @04-func.mdc

==============================================

조건-파일경로) 참고할 TSX  파일경로: src/components/boards-detail/index.tsx
조건-파일경로) 참고할 CSS  파일경로: src/components/boards-detail/styles.module.css
조건-파일경로) 구현될 HOOK 파일경로: src/components/boards-detail/hooks/index.link.routing.hook.ts
조건-파일경로) 구현될 TEST 파일경로: src/components/boards-detail/tests/index.link.routing.hook.spec.ts

==============================================

핵심요구사항) 병렬처리 구현을 위한 작업 방식 조건
            - 다른 채팅에서 개발중인 파일을 수정 및 삭제 하지 말 것.
            - 테스트 충돌을 방지하기 위해, 빌드테스트, 전체테스트를 하지 말 것.


핵심요구사항) 다음의 기능을 playwright 테스트를 활용하여 TDD기반으로 구현하고, 테스트에 통과할 때까지 반복할 것.
            1) 테스트 제외 라이브러리
                - jest
                - @testing-library/react

            2) 테스트 조건
                - network 통신이 포함된 테스트의 timeout은 2000ms 미만으로 설정할 것.
                - network 통신이 없는 단순 연산, 렌더링 테스트는 500ms 미만 혹은 timeout 미설정으로 할 것.

            3) 테스트 API 조건
                3-1) 데이터 
                - 실제 API 데이터를 사용할 것.
                - Mock데이터, MockedProvider, intercept 등 네트워크 모킹 사용 금지

                3-2) 성공 시나리오
                - 실제 API를 호출해 정상적인 응답을 수신해야 함.
                - Mock 데이터를 모킹하지 말 것.
                - 응답 데이터가 정상적으로 UI에 반영되는 지 검증할 것.

                3-3) 실패 시나리오 
                - 실제 API 호출에서 인증 실패 / 네트워크 오류 등 상황을 재현할 것.
                - Mock 데이터를 사용하거나 에러를 인위적으로 주입하지 말 것.
                - 에러 상태('error' 또는 'catch') 처리 로직이 UI에 반영되는지 검증할 것.

핵심요구사항) 각 게시글 목록 클릭 시, url.ts의 페이지URL에 정의된 경로로 이동할 것.
            1) 경로: commons/constants/url.ts
            2) 조건
                - CSS는 cursor: pointer만 추가할 것.
                - 경로를 하드코딩하지 말고, url.ts를 import 하여 적용할 것.
                - 해당 카드에 바인딩된 id(key)를 사용할 것.
            
            3) 목록으로 버튼
                - url.ts에 정의된 게시글 목록 페이지 => /boards

            4) 수정하기 버튼
                - url.ts에 정의된 게시글 수정 페이지 => /boards/[boardId]/edit