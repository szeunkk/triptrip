아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: rchpoleh)
조건-피그마) 참고할 공통컴포넌트 노드ID: 41:391

조건-파일경로) 구현될 TSX 파일경로: src/commons/components/datepicker/index.tsx
조건-파일경로) 구현될 CSS 파일경로: src/commons/components/datepicker/styles.module.css

==============================================

기존히스토리-참고만) MCP를 연동하여 피그마의 디자인을 그대로 소스코드로 구현할 것.

기존히스토리-참고만) 다음 조건을 모두 만족하는 완전한 variant 시스템을 구현할 것.
            - size: 'small' | 'medium'

기존히스토리-참고만) input의 type="date"를 활용하여 구현할 것.
            - 단, figma 디자인과 동일하게 구현하기 위해, webkit 속성 등을 활용하여 구현할 것.

기존히스토리-참고만) YYYY.MM.DD를 클릭하였을 때, 날짜 선택을 할 수 있도록 수정할 것.

기존히스토리-참고만) 피그마와 동일하게 날짜 선택 전에는 "YYYY.MM.DD"로 표시될 수 있도록 할 것.

기존히스토리-참고만) 단일 날짜가 아닌 기간을 선택할 수 있도록 구현할 것.

기존히스토리-참고만) 날짜 선택 시 styles_datepicker width 값이 변하지 않도록 variant size별로 피그마와 동일한 width값을 설정할 것.

==============================================

핵심요구사항) 날짜 선택 시 기존 간격을 유지하기 위해 dateWrapper에서 고정된 자리를 유지할 수 있도록 할 것.